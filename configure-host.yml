- name: Configure Host
  hosts: baremetal
  become: true
  gather_facts: true
  vars:
    rhsm_activationkey: rhel-server
    rhsm_org_id: ACME
  tasks:
  - name: run subscription role for RHEL 8
    ansible.builtin.include_role:
      name: swygue-redhat-subscription
    vars:
      rhsm_repos:
        - rhel-8-for-x86_64-baseos-rpms
        - rhel-8-for-x86_64-appstream-rpms 
        - ansible-2.9-for-rhel-8-x86_64-rpms
    when: (( ansible_distribution == "RedHat" and ansible_distribution_major_version == '8'))
    tags: rhsm 
  - name: run subscription role for RHEL 9
    ansible.builtin.include_role:
      name: swygue-redhat-subscription
    vars:
      rhsm_repos:
        - rhel-9-for-x86_64-baseos-rpms
        - rhel-9-for-x86_64-appstream-rpms
    when: (( ansible_distribution == "RedHat" and ansible_distribution_major_version == '9'))
    tags: rhsm 
  - name: Install required packages for RHEL 8 
    ansible.builtin.package:
      name:
        - git
        - vim 
        - unzip 
        - wget
        - bind-utils
        - tar
        - podman
        - ansible
        - jq
        - python3-pip
        - genisoimage
        - nmstate
        - dialog
      state: latest
    tags: install_packages
    when: ( ansible_distribution == "RedHat" and ansible_distribution_major_version == '8')
  - name: Install required packages for RHEL 9
    ansible.builtin.package:
      name:
        - git
        - vim 
        - unzip 
        - wget
        - bind-utils
        - tar
        - podman
        - ansible-core
        - jq
        - python3-pip
        - genisoimage
        - nmstate
        - dialog
      state: latest
    tags: install_packages
    when: ( ansible_distribution == "RedHat" and ansible_distribution_major_version == '9')
  - name: Enable EPEL Repository on CentOS
    ansible.builtin.package:
      name: epel-release
      state: latest
    when: (ansible_distribution == "CentOS")
  - name: Install required packages for CENTOS
    ansible.builtin.package:
      name:
        - git
        - vim 
        - unzip 
        - wget
        - bind-utils
        - tar
        - podman
        - ansible
        - jq
        - python3-pip
        - genisoimage
        - nmstate
        - dialog
      state: latest
    tags: install_packages
    when: (ansible_distribution == "CentOS")
  - name: Install required packages for FEDORA
    ansible.builtin.package:
      name:
        - git
        - vim 
        - unzip 
        - wget
        - bind-utils
        - tar
        - podman
        - ansible
        - jq
        - python3-pip
        - genisoimage
        - nmstate
        - dialog
      state: latest
    tags: install_packages
    when: (ansible_distribution == "Fedora")
  - name: Download Openshift Install Script
    ansible.builtin.get_url:
      url: https://raw.githubusercontent.com/tosin2013/openshift-4-deployment-notes/master/pre-steps/configure-openshift-packages.sh
      dest: /tmp/configure-openshift-packages.sh
      mode: '0775'
    tags: install_oc_cli
  - name: Install OpenShift cli packages
    ansible.builtin.command: /tmp/configure-openshift-packages.sh -i
    tags: install_oc_cli
  - name: kvm-gitops clone 
    ansible.builtin.git:
      repo: http://gitea.tosins-lab.com:3000/tosin/kvm-gitops.git
      dest: /home/admin/kvm-gitops
      single_branch: yes
      version: main
    tags: install_pip_modules
  - name: Recursively change ownership of kvm-gitops directory 
    ansible.builtin.file:
      path: /home/admin/kvm-gitops
      state: directory
      recurse: yes
      owner: admin
      group: admin
    tags: install_pip_modules
  - name: Install pip modules
    ansible.builtin.pip:
      requirements: "{{playbook_dir}}/scripts/requirements.txt"
    tags: install_pip_modules
  - name: Enable  podman socket service
    ansible.builtin.service:
      name: podman.socket
      enabled: true
    tags: enable_podman_socket
  - name: Start  podman socket service
    ansible.builtin.service:
      name: podman.socket
      state: started
    tags: enable_podman_socket
  - name: permit traffic in default zone on port 8081
    ansible.posix.firewalld:
      port: 8081/tcp
      permanent: true
      state: enabled
    tags: configure_firewalld
  - name: Download Example GitOps Script
    ansible.builtin.get_url:
      url: https://raw.githubusercontent.com/tosin2013/kvm-gitops/main/scripts/example_script.sh
      dest: /root/example_script.sh
      mode: '0775'
    tags: copy_example_script
